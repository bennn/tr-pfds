#lang typed-scheme
(require "../skewbinaryrandomaccesslist.ss")
(require typed/test-engine/scheme-tests)

(check-expect (empty? empty) #t)
(check-expect (empty? (skew-ralist (list 1 2 3))) #f)
(check-expect (head (skew-ralist (list 1 2 3))) 1)
(check-expect (head (skew-ralist (list 2 3))) 2)
(check-error (head (skew-ralist (list))) "List is empty : head")

(check-expect (skew-ralist->list (tail (skew-ralist (list 1 2 3)))) (list 2 3))
(check-expect (skew-ralist->list (tail (skew-ralist (list 2 3)))) (list 3))
(check-expect (skew-ralist->list (tail (skew-ralist (list 3)))) null)
(check-error (tail (skew-ralist (list))) "List is empty : tail")

(check-expect (skew-ralist->list (ralist-cons 5 (skew-ralist (list 1 2 3)))) 
              (list 5 1 2 3))
(check-expect (skew-ralist->list (ralist-cons 10 (skew-ralist (list 2 3)))) 
              (list 10 2 3))
(check-expect (skew-ralist->list (ralist-cons 12 (skew-ralist (list 3)))) 
              (list 12 3))
(check-expect (skew-ralist->list (ralist-cons 12 (skew-ralist (list)))) 
              (list 12))

(check-expect (skew-ralist->list (update (skew-ralist (list 1 2 3)) 2 5)) 
              (list 1 2 5))
(check-expect (skew-ralist->list (update (skew-ralist (list 1 2 3 5 6)) 4 10)) 
              (list 1 2 3 5 10))
(check-error (update (skew-ralist (list 1 2 3 5)) 4 10) 
             "Index out of bound : update")
(check-error (update (skew-ralist (list)) 0 10)
             "Index out of bound : update")
(check-error (update (skew-ralist (list)) -1 10)
             "Index out of bound : update")

(check-expect (lookup (skew-ralist (list 1 2 3)) 2) 3)
(check-expect (lookup (skew-ralist (list 1 2 3)) 0) 1)
(check-expect (lookup (skew-ralist (list 1 2 3)) 1) 2)
(check-error (lookup (skew-ralist (list 1 2 3 5)) 4) 
             "Index out of bound : lookup")
(check-error (lookup (skew-ralist (list)) 0)
             "Index out of bound : lookup")
(check-error (lookup (skew-ralist (list)) -1)
             "Index out of bound : lookup")

(check-expect (skew-ralist->list (drop (skew-ralist (list 1 2 3)) 2)) 
              (list 3))
(check-expect (skew-ralist->list (drop (skew-ralist (list 1 2 3 5 6)) 5)) 
              (list))
(check-expect (skew-ralist->list (drop (skew-ralist (list 1 2 3 5 6)) 3)) 
              (list 5 6))
(check-expect (drop (skew-ralist (list)) 0) null)
(check-error (drop (skew-ralist (list 1 2 3 5)) 5) 
             "Index out of bound : drop")
(check-error (drop (skew-ralist (list)) -1)
             "Index out of bound : drop")

(test)